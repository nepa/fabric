<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
      http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <name>Fabric Code Generation Framework</name>
  <groupId>de.uniluebeck.itm</groupId>
  <artifactId>fabric</artifactId>

  <packaging>pom</packaging>
  <version>1.0</version>

  <modules>
    <module>core</module>
    <module>codegeneration</module>
    <module>wsdl-schema-parser</module>

    <module>module/api</module>
    <module>module/typegen</module>
    <module>module/exi</module>
    <module>module/dot</module>
    <module>module/cpp</module>
    <module>module/protobuf</module>
  </modules>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.codegeneration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.wsdl-schema-parser</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.module.api</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.module.typegen</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.module.exi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.module.dot</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.module.cpp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>fabric.module.protobuf</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>de.uniluebeck.itm</groupId>
        <artifactId>tr.util</artifactId>
        <version>0.6.1-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>r08</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.1</version>
      </dependency>

      <dependency>
        <groupId>org.apache.xmlbeans</groupId>
        <artifactId>xmlbeans</artifactId>
        <version>2.5.0</version>
      </dependency>
      <dependency>
        <groupId>wsdl4j</groupId>
        <artifactId>wsdl4j</artifactId>
        <version>1.6.2</version>
      </dependency>
      <!--
        WSDL4J needs org.w3c.dom.ElementTraversal, which is part
        of Xerces. However, if we include the latest version, the
        maven-onejar-plugin will throw such warnings at runtime:

          "org/w3c/dom/UserDataHandler.class in lib/xml-apis-1.3.03.jar is
            hidden by lib/xmlbeans-2.5.0.jar (with different bytecode)"

        To prevent this, we use a combination of xmlbeans 2.5.0
        and xercesImpl 2.7.1, which obviously use the same version
        of all classes internally.
      -->
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>2.7.1</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.8.1</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.6</version>
          <dependencies>
            <dependency>
              <groupId>de.uniluebeck.itm</groupId>
              <artifactId>itm-build-tools</artifactId>
              <version>1.0</version>
            </dependency>
          </dependencies>
          <configuration>
            <configLocation>itm_checks.xml</configLocation>
            <enableRulesSummary>false</enableRulesSummary>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <!-- mvn license:check / mvn license:format -->
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <version>1.9.0</version>
        <artifactId>maven-license-plugin</artifactId>
        <configuration>
          <header>src/etc/license-header.txt</header>

          <properties>
            <!-- Use Maven property 'currentYear' (defined at EOF) -->
            <year>${currentYear}</year>
          </properties>

          <strictCheck>true</strictCheck>

          <!--
            Protection: Create *.licensed files on default;
            set to 'false' if you want to change real files
          -->
          <dryRun>true</dryRun>

          <!-- Only add header to source files -->
          <includes>
            <include>**/*.java</include>
            <include>**/*.xml</include>
            <include>**/*.xsd</include>
            <include>**/*.wsdl</include>
          </includes>

          <!-- Exclude some files and directories -->
          <excludes>
            <exclude>**/resources/wsdls/**</exclude>
            <exclude>.git/**</exclude>
            <exclude>.gitignore</exclude>
            <exclude>README</exclude>

            <!-- Some people don't want license headers in their files ;-) -->
            <exclude>third-party/**</exclude>
            <exclude>module/typegen/**</exclude>
            <exclude>module/exi/**</exclude>
            <exclude>module/midgen4j/**</exclude>
            <exclude>module/cpp/**</exclude>
            <exclude>wsdl-schema-parser/src/main/java/fabric/wsdlschemaparser/wsdl/**</exclude>
            <exclude>wsdl-schema-parser/src/test/java/fabric/wsdlschemaparser/**</exclude>

            <!-- Core unit tests and resources written by 'reichart' -->
            <exclude>core/src/test/**</exclude>
          </excludes>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.6</version>
      </plugin>
    </plugins>
  </reporting>

  <repositories>

    <repository>
      <id>google-maven-repository</id>
      <name>Google Maven Repository</name>
      <url>http://google-maven-repository.googlecode.com/svn/repository/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>itm-maven-repository-releases</id>
      <url>http://www.itm.uni-luebeck.de/projects/maven/releases/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>itm-maven-repository-snapshots</id>
      <url>http://www.itm.uni-luebeck.de/projects/maven/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>repository.tu-bs.de</id>
      <url>http://www.ibr.cs.tu-bs.de/maven/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <layout>default</layout>
    </repository>

    <repository>
      <id>repository.jboss.org</id>
      <url>http://repository.jboss.org/nexus/content/groups/public/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Repository for Maven 2</name>
      <url>http://download.java.net/maven/2/</url>
    </repository>

  </repositories>

  <pluginRepositories>

    <pluginRepository>
      <id>itm-maven-plugin-repository-releases</id>
      <url>http://www.itm.uni-luebeck.de/projects/maven/releases/</url>
    </pluginRepository>

  </pluginRepositories>

  <properties>
    <!-- Format build timestamp (default: yyyyMMdd-HHmm) -->
    <maven.build.timestamp.format>yyyy</maven.build.timestamp.format>

    <!-- Create property 'currentYear' that points to build timestamp -->
    <currentYear>${maven.build.timestamp}</currentYear>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

</project>
